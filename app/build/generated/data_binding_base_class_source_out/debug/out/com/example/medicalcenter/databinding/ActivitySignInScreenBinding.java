// Generated by view binder compiler. Do not edit!
package com.example.medicalcenter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medicalcenter.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView arrowImageButton;

  @NonNull
  public final ImageButton checkButton;

  @NonNull
  public final TextView createNewAccountText;

  @NonNull
  public final TextView dontHaveAccountText;

  @NonNull
  public final TextInputLayout emailInput;

  @NonNull
  public final ImageView loginAvatar;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final LinearLayout or;

  @NonNull
  public final Button orSignUpButton;

  @NonNull
  public final TextInputLayout passwordInput;

  @NonNull
  public final LinearLayout remember;

  @NonNull
  public final Button signUpButton;

  @NonNull
  public final LinearLayout socialButtons;

  private ActivitySignInScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView arrowImageButton, @NonNull ImageButton checkButton,
      @NonNull TextView createNewAccountText, @NonNull TextView dontHaveAccountText,
      @NonNull TextInputLayout emailInput, @NonNull ImageView loginAvatar,
      @NonNull ConstraintLayout main, @NonNull LinearLayout or, @NonNull Button orSignUpButton,
      @NonNull TextInputLayout passwordInput, @NonNull LinearLayout remember,
      @NonNull Button signUpButton, @NonNull LinearLayout socialButtons) {
    this.rootView = rootView;
    this.arrowImageButton = arrowImageButton;
    this.checkButton = checkButton;
    this.createNewAccountText = createNewAccountText;
    this.dontHaveAccountText = dontHaveAccountText;
    this.emailInput = emailInput;
    this.loginAvatar = loginAvatar;
    this.main = main;
    this.or = or;
    this.orSignUpButton = orSignUpButton;
    this.passwordInput = passwordInput;
    this.remember = remember;
    this.signUpButton = signUpButton;
    this.socialButtons = socialButtons;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow_image_button;
      ImageView arrowImageButton = ViewBindings.findChildViewById(rootView, id);
      if (arrowImageButton == null) {
        break missingId;
      }

      id = R.id.checkButton;
      ImageButton checkButton = ViewBindings.findChildViewById(rootView, id);
      if (checkButton == null) {
        break missingId;
      }

      id = R.id.createNewAccountText;
      TextView createNewAccountText = ViewBindings.findChildViewById(rootView, id);
      if (createNewAccountText == null) {
        break missingId;
      }

      id = R.id.dontHaveAccountText;
      TextView dontHaveAccountText = ViewBindings.findChildViewById(rootView, id);
      if (dontHaveAccountText == null) {
        break missingId;
      }

      id = R.id.emailInput;
      TextInputLayout emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.loginAvatar;
      ImageView loginAvatar = ViewBindings.findChildViewById(rootView, id);
      if (loginAvatar == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.or;
      LinearLayout or = ViewBindings.findChildViewById(rootView, id);
      if (or == null) {
        break missingId;
      }

      id = R.id.orSignUpButton;
      Button orSignUpButton = ViewBindings.findChildViewById(rootView, id);
      if (orSignUpButton == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      TextInputLayout passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.remember;
      LinearLayout remember = ViewBindings.findChildViewById(rootView, id);
      if (remember == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      Button signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.socialButtons;
      LinearLayout socialButtons = ViewBindings.findChildViewById(rootView, id);
      if (socialButtons == null) {
        break missingId;
      }

      return new ActivitySignInScreenBinding((ConstraintLayout) rootView, arrowImageButton,
          checkButton, createNewAccountText, dontHaveAccountText, emailInput, loginAvatar, main, or,
          orSignUpButton, passwordInput, remember, signUpButton, socialButtons);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
